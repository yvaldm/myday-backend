/*
 * This file is generated by jOOQ.
 */
package com.yvaldm.myday.mydaybackend.dao.generated;


import com.yvaldm.myday.mydaybackend.dao.generated.tables.Action;
import com.yvaldm.myday.mydaybackend.dao.generated.tables.PerformedAction;
import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Public extends SchemaImpl {

    private static final long serialVersionUID = -2056699926;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.action</code>.
     */
    public final Action ACTION = com.yvaldm.myday.mydaybackend.dao.generated.tables.Action.ACTION;

    /**
     * The table <code>public.performed_action</code>.
     */
    public final PerformedAction PERFORMED_ACTION = com.yvaldm.myday.mydaybackend.dao.generated.tables.PerformedAction.PERFORMED_ACTION;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.ACTION_ID_SEQ,
            Sequences.PERFORMED_ACTION_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Action.ACTION,
            PerformedAction.PERFORMED_ACTION);
    }
}
