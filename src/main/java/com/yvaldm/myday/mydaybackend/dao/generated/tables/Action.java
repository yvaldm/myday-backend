/*
 * This file is generated by jOOQ.
 */
package com.yvaldm.myday.mydaybackend.dao.generated.tables;


import com.yvaldm.myday.mydaybackend.dao.generated.Indexes;
import com.yvaldm.myday.mydaybackend.dao.generated.Keys;
import com.yvaldm.myday.mydaybackend.dao.generated.Public;
import com.yvaldm.myday.mydaybackend.dao.generated.tables.records.ActionRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Action extends TableImpl<ActionRecord> {

    private static final long serialVersionUID = -1305073592;

    /**
     * The reference instance of <code>public.action</code>
     */
    public static final Action ACTION = new Action();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActionRecord> getRecordType() {
        return ActionRecord.class;
    }

    /**
     * The column <code>public.action.id</code>.
     */
    public final TableField<ActionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('action_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.action.name</code>.
     */
    public final TableField<ActionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.action.rating</code>.
     */
    public final TableField<ActionRecord, Integer> RATING = createField("rating", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.action.image</code>.
     */
    public final TableField<ActionRecord, String> IMAGE = createField("image", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.action</code> table reference
     */
    public Action() {
        this(DSL.name("action"), null);
    }

    /**
     * Create an aliased <code>public.action</code> table reference
     */
    public Action(String alias) {
        this(DSL.name(alias), ACTION);
    }

    /**
     * Create an aliased <code>public.action</code> table reference
     */
    public Action(Name alias) {
        this(alias, ACTION);
    }

    private Action(Name alias, Table<ActionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Action(Name alias, Table<ActionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Action(Table<O> child, ForeignKey<O, ActionRecord> key) {
        super(child, key, ACTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACTION_NAME_KEY, Indexes.ACTION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ActionRecord, Long> getIdentity() {
        return Keys.IDENTITY_ACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActionRecord> getPrimaryKey() {
        return Keys.ACTION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActionRecord>> getKeys() {
        return Arrays.<UniqueKey<ActionRecord>>asList(Keys.ACTION_PKEY, Keys.ACTION_NAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Action as(String alias) {
        return new Action(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Action as(Name alias) {
        return new Action(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Action rename(String name) {
        return new Action(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Action rename(Name name) {
        return new Action(name, null);
    }
}
